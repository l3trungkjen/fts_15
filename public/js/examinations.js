// Generated by CoffeeScript 1.8.0
(function() {
  $.fn.examinations = {};

  $.fn.examinations.init = function() {
    return $(document).on('submit', '#create_examinations', $.fn.examinations.createExam);
  };

  $.fn.examinations.createExam = function(e) {
    e.preventDefault();
    return $.ajax({
      url: '/fts_15/examinations/create',
      type: 'POST',
      data: new FormData(this),
      contentType: false,
      cache: false,
      processData: false,
      success: function(data) {
        if (data === null || data === '') {
          return alert('Please, Choose categories...');
        } else {
          return $('#users').html(data);
        }
      }
    });
  };

  $.fn.examinations.clock = function() {
    var intervalClock;
    if (parseInt($('#time_value_count_down').val()) > 0) {
      return intervalClock = setInterval(function() {
        var timeValueCountDown, timeValueCountUp;
        timeValueCountDown = parseInt($('#time_value_count_down').val());
        timeValueCountUp = parseInt($('#time_value_count_up').val());
        if (timeValueCountDown < 0) {
          $.fn.examinations.stopClock(intervalClock);
        }
        $('#time').html($.fn.examinations.timeValue(timeValueCountDown));
        $('#time_value_count_down').val(timeValueCountDown - 1);
        return $('#time_value_count_up').val(timeValueCountUp + 1);
      }, 1000);
    }
  };

  $.fn.examinations.stopClock = function(time) {
    clearInterval(time);
    alert('Time has expired.');
    return $('#form_examination').submit();
  };

  $.fn.examinations.timeValue = function(time) {
    var hour, minute, second, _time_hour, _time_minute, _time_second;
    hour = parseInt(time / (60 * 60) % 24);
    minute = parseInt((time / 60) % 60);
    second = parseInt(time % 60);
    if (hour < 10) {
      _time_hour = '0' + hour;
    } else {
      _time_hour = hour;
    }
    if (minute < 10) {
      _time_minute = '0' + minute;
    } else {
      _time_minute = minute;
    }
    if (second < 10) {
      _time_second = '0' + second;
    } else {
      _time_second = second;
    }
    return _time_hour + ':' + _time_minute + ':' + _time_second;
  };

}).call(this);
